diff -Naur linux-hwe-4.8.0/drivers/net/wireless/ath/ath9k/eeprom_4k.c drivers/net/wireless/ath/ath9k/eeprom_4k.c
--- linux-hwe-4.8.0/drivers/net/wireless/ath/ath9k/eeprom_4k.c	2016-10-02 19:24:33.000000000 -0400
+++ drivers/net/wireless/ath/ath9k/eeprom_4k.c	2017-09-23 13:20:46.369332176 -0400
@@ -715,7 +715,8 @@
 			MAX_RATE_POWER | AR_PHY_POWER_TX_RATE_MAX_TPC_ENABLE);
 	} else {
 		/* Disable TPC */
-		REG_WRITE(ah, AR_PHY_POWER_TX_RATE_MAX, MAX_RATE_POWER);
+		REG_WRITE(ah, AR_PHY_POWER_TX_RATE_MAX,
+			MAX_RATE_POWER | AR_PHY_POWER_TX_RATE_MAX_TPC_ENABLE);
 	}
 
 	REGWRITE_BUFFER_FLUSH(ah);
diff -Naur linux-hwe-4.8.0/drivers/net/wireless/ath/ath9k/hw.c drivers/net/wireless/ath/ath9k/hw.c
--- linux-hwe-4.8.0/drivers/net/wireless/ath/ath9k/hw.c	2017-09-23 17:21:50.000000000 -0400
+++ drivers/net/wireless/ath/ath9k/hw.c	2017-09-23 15:27:51.815701634 -0400
@@ -459,7 +459,8 @@
 	ah->power_mode = ATH9K_PM_UNDEFINED;
 	ah->htc_reset_init = true;
 
-	ah->tpc_enabled = false;
+	/* ar9002 does not support TPC for the moment */
+	ah->tpc_enabled = !!AR_SREV_9300_20_OR_LATER(ah);
 
 	ah->ani_function = ATH9K_ANI_ALL;
 	if (!AR_SREV_9300_20_OR_LATER(ah))
@@ -1138,9 +1139,9 @@
 	u32 ctl = ath_regd_get_band_ctl(reg, chan->chan->band);
 
 	if (IS_CHAN_2GHZ(chan))
-		ctl |= CTL_11G;
+		ctl |= NO_CTL;
 	else
-		ctl |= CTL_11A;
+		ctl |= NO_CTL;
 
 	return ctl;
 }
@@ -2911,17 +2912,19 @@
 	struct ath_regulatory *reg = ath9k_hw_regulatory(ah);
 	struct ieee80211_channel *channel;
 	int chan_pwr, new_pwr;
+	u16 ctl = NO_CTL;
 
 	if (!chan)
 		return;
 
+	if (!test)
+		ctl = NO_CTL;
+
 	channel = chan->chan;
 	chan_pwr = min_t(int, channel->max_power * 2, MAX_RATE_POWER);
 	new_pwr = min_t(int, chan_pwr, reg->power_limit);
 
-	ah->eep_ops->set_txpower(ah, chan,
-				 ath9k_regd_get_ctl(reg, chan),
-				 get_antenna_gain(ah, chan), new_pwr, test);
+	ah->eep_ops->set_txpower(ah, chan, ctl, get_antenna_gain(ah, chan), new_pwr, test);
 }
 
 void ath9k_hw_set_txpowerlimit(struct ath_hw *ah, u32 limit, bool test)
diff -Naur linux-hwe-4.8.0/drivers/net/wireless/ath/Kconfig drivers/net/wireless/ath/Kconfig
--- linux-hwe-4.8.0/drivers/net/wireless/ath/Kconfig	2016-10-02 19:24:33.000000000 -0400
+++ drivers/net/wireless/ath/Kconfig	2017-09-19 15:21:07.736913323 -0400
@@ -22,6 +22,9 @@
 
 if WLAN_VENDOR_ATH
 
+config ATH_USER_REGD
+	bool "Do not enforce EEPROM regulatory restrictions"
+
 config ATH_DEBUG
 	bool "Atheros wireless debugging"
 	---help---
diff -Naur linux-hwe-4.8.0/drivers/net/wireless/ath/regd.c drivers/net/wireless/ath/regd.c
--- linux-hwe-4.8.0/drivers/net/wireless/ath/regd.c	2016-10-02 19:24:33.000000000 -0400
+++ drivers/net/wireless/ath/regd.c	2017-09-19 15:21:07.740246647 -0400
@@ -341,6 +341,10 @@
 	struct ieee80211_channel *ch;
 	unsigned int i;
 
+#ifdef CONFIG_ATH_USER_REGD
+	return;
+#endif
+
 	for (band = 0; band < NUM_NL80211_BANDS; band++) {
 		if (!wiphy->bands[band])
 			continue;
@@ -374,6 +378,10 @@
 {
 	struct ieee80211_supported_band *sband;
 
+#ifdef CONFIG_ATH_USER_REGD
+	return;
+#endif
+
 	sband = wiphy->bands[NL80211_BAND_2GHZ];
 	if (!sband)
 		return;
@@ -402,6 +410,10 @@
 	struct ieee80211_channel *ch;
 	unsigned int i;
 
+#ifdef CONFIG_ATH_USER_REGD
+	return;
+#endif
+
 	if (!wiphy->bands[NL80211_BAND_5GHZ])
 		return;
 
@@ -633,6 +645,11 @@
 	const struct ieee80211_regdomain *regd;
 
 	wiphy->reg_notifier = reg_notifier;
+
+#ifdef CONFIG_ATH_USER_REGD
+	return 0;
+#endif
+
 	wiphy->regulatory_flags |= REGULATORY_STRICT_REG |
 				   REGULATORY_CUSTOM_REG;
 
diff -Naur linux-hwe-4.8.0/drivers/net/wireless/ath/regd_common.h drivers/net/wireless/ath/regd_common.h
--- linux-hwe-4.8.0/drivers/net/wireless/ath/regd_common.h	2016-10-02 19:24:33.000000000 -0400
+++ drivers/net/wireless/ath/regd_common.h	2017-09-23 15:10:59.683192676 -0400
@@ -159,117 +159,117 @@
 static struct reg_dmn_pair_mapping regDomainPairs[] = {
 	/* regpair, 5 GHz CTL, 2 GHz CTL */
 	{NO_ENUMRD, DEBUG_REG_DMN, DEBUG_REG_DMN},
-	{NULL1_WORLD, NO_CTL, CTL_ETSI},
-	{NULL1_ETSIB, NO_CTL, CTL_ETSI},
-	{NULL1_ETSIC, NO_CTL, CTL_ETSI},
-
-	{FCC2_FCCA, CTL_FCC, CTL_FCC},
-	{FCC2_WORLD, CTL_FCC, CTL_ETSI},
-	{FCC2_ETSIC, CTL_FCC, CTL_ETSI},
-	{FCC3_FCCA, CTL_FCC, CTL_FCC},
-	{FCC3_WORLD, CTL_FCC, CTL_ETSI},
-	{FCC4_FCCA, CTL_FCC, CTL_FCC},
-	{FCC5_FCCA, CTL_FCC, CTL_FCC},
-	{FCC6_FCCA, CTL_FCC, CTL_FCC},
-	{FCC6_WORLD, CTL_FCC, CTL_ETSI},
-
-	{ETSI1_WORLD, CTL_ETSI, CTL_ETSI},
-	{ETSI2_WORLD, CTL_ETSI, CTL_ETSI},
-	{ETSI3_WORLD, CTL_ETSI, CTL_ETSI},
-	{ETSI4_WORLD, CTL_ETSI, CTL_ETSI},
-	{ETSI5_WORLD, CTL_ETSI, CTL_ETSI},
-	{ETSI6_WORLD, CTL_ETSI, CTL_ETSI},
+	{NULL1_WORLD, NO_CTL, NO_CTL},
+	{NULL1_ETSIB, NO_CTL, NO_CTL},
+	{NULL1_ETSIC, NO_CTL, NO_CTL},
+
+	{FCC2_FCCA, NO_CTL, NO_CTL},
+	{FCC2_WORLD, NO_CTL, NO_CTL},
+	{FCC2_ETSIC, NO_CTL, NO_CTL},
+	{FCC3_FCCA, NO_CTL, NO_CTL},
+	{FCC3_WORLD, NO_CTL, NO_CTL},
+	{FCC4_FCCA, NO_CTL, NO_CTL},
+	{FCC5_FCCA, NO_CTL, NO_CTL},
+	{FCC6_FCCA, NO_CTL, NO_CTL},
+	{FCC6_WORLD, NO_CTL, NO_CTL},
+
+	{ETSI1_WORLD, NO_CTL, NO_CTL},
+	{ETSI2_WORLD, NO_CTL, NO_CTL},
+	{ETSI3_WORLD, NO_CTL, NO_CTL},
+	{ETSI4_WORLD, NO_CTL, NO_CTL},
+	{ETSI5_WORLD, NO_CTL, NO_CTL},
+	{ETSI6_WORLD, NO_CTL, NO_CTL},
 
 	/* XXX: For ETSI3_ETSIA, Was NO_CTL meant for the 2 GHz band ? */
-	{ETSI3_ETSIA, CTL_ETSI, CTL_ETSI},
-	{FRANCE_RES, CTL_ETSI, CTL_ETSI},
+	{ETSI3_ETSIA, NO_CTL, NO_CTL},
+	{FRANCE_RES, NO_CTL, NO_CTL},
 
-	{FCC1_WORLD, CTL_FCC, CTL_ETSI},
-	{FCC1_FCCA, CTL_FCC, CTL_FCC},
-	{APL1_WORLD, CTL_FCC, CTL_ETSI},
-	{APL2_WORLD, CTL_FCC, CTL_ETSI},
-	{APL3_WORLD, CTL_FCC, CTL_ETSI},
-	{APL4_WORLD, CTL_FCC, CTL_ETSI},
-	{APL5_WORLD, CTL_FCC, CTL_ETSI},
-	{APL6_WORLD, CTL_ETSI, CTL_ETSI},
-	{APL8_WORLD, CTL_ETSI, CTL_ETSI},
-	{APL9_WORLD, CTL_ETSI, CTL_ETSI},
-
-	{APL3_FCCA, CTL_FCC, CTL_FCC},
-	{APL7_FCCA, CTL_FCC, CTL_FCC},
-	{APL1_ETSIC, CTL_FCC, CTL_ETSI},
-	{APL2_ETSIC, CTL_FCC, CTL_ETSI},
-	{APL2_APLD, CTL_FCC, NO_CTL},
-
-	{MKK1_MKKA, CTL_MKK, CTL_MKK},
-	{MKK1_MKKB, CTL_MKK, CTL_MKK},
-	{MKK1_FCCA, CTL_MKK, CTL_FCC},
-	{MKK1_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK1_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK1_MKKC, CTL_MKK, CTL_MKK},
-
-	{MKK2_MKKA, CTL_MKK, CTL_MKK},
-	{MKK3_MKKA, CTL_MKK, CTL_MKK},
-	{MKK3_MKKB, CTL_MKK, CTL_MKK},
-	{MKK3_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK3_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK3_MKKC, CTL_MKK, CTL_MKK},
-	{MKK3_FCCA, CTL_MKK, CTL_FCC},
-
-	{MKK4_MKKA, CTL_MKK, CTL_MKK},
-	{MKK4_MKKB, CTL_MKK, CTL_MKK},
-	{MKK4_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK4_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK4_MKKC, CTL_MKK, CTL_MKK},
-	{MKK4_FCCA, CTL_MKK, CTL_FCC},
-
-	{MKK5_MKKB, CTL_MKK, CTL_MKK},
-	{MKK5_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK5_MKKC, CTL_MKK, CTL_MKK},
-
-	{MKK6_MKKB, CTL_MKK, CTL_MKK},
-	{MKK6_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK6_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK6_MKKC, CTL_MKK, CTL_MKK},
-	{MKK6_FCCA, CTL_MKK, CTL_FCC},
-
-	{MKK7_MKKB, CTL_MKK, CTL_MKK},
-	{MKK7_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK7_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK7_MKKC, CTL_MKK, CTL_MKK},
-	{MKK7_FCCA, CTL_MKK, CTL_FCC},
-
-	{MKK8_MKKB, CTL_MKK, CTL_MKK},
-	{MKK8_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK8_MKKC, CTL_MKK, CTL_MKK},
-
-	{MKK9_MKKA, CTL_MKK, CTL_MKK},
-	{MKK9_FCCA, CTL_MKK, CTL_FCC},
-	{MKK9_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK9_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK9_MKKC, CTL_MKK, CTL_MKK},
-
-	{MKK10_MKKA, CTL_MKK, CTL_MKK},
-	{MKK10_FCCA, CTL_MKK, CTL_FCC},
-	{MKK10_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK10_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK10_MKKC, CTL_MKK, CTL_MKK},
-
-	{MKK11_MKKA, CTL_MKK, CTL_MKK},
-	{MKK11_FCCA, CTL_MKK, CTL_FCC},
-	{MKK11_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK11_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK11_MKKC, CTL_MKK, CTL_MKK},
-
-	{MKK12_MKKA, CTL_MKK, CTL_MKK},
-	{MKK12_FCCA, CTL_MKK, CTL_FCC},
-	{MKK12_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK12_MKKA2, CTL_MKK, CTL_MKK},
-	{MKK12_MKKC, CTL_MKK, CTL_MKK},
-
-	{MKK13_MKKB, CTL_MKK, CTL_MKK},
-	{MKK14_MKKA1, CTL_MKK, CTL_MKK},
-	{MKK15_MKKA1, CTL_MKK, CTL_MKK},
+	{FCC1_WORLD, NO_CTL, NO_CTL},
+	{FCC1_FCCA, NO_CTL, NO_CTL},
+	{APL1_WORLD, NO_CTL, NO_CTL},
+	{APL2_WORLD, NO_CTL, NO_CTL},
+	{APL3_WORLD, NO_CTL, NO_CTL},
+	{APL4_WORLD, NO_CTL, NO_CTL},
+	{APL5_WORLD, NO_CTL, NO_CTL},
+	{APL6_WORLD, NO_CTL, NO_CTL},
+	{APL8_WORLD, NO_CTL, NO_CTL},
+	{APL9_WORLD, NO_CTL, NO_CTL},
+
+	{APL3_FCCA, NO_CTL, NO_CTL},
+	{APL7_FCCA, NO_CTL, NO_CTL},
+	{APL1_ETSIC, NO_CTL, NO_CTL},
+	{APL2_ETSIC, NO_CTL, NO_CTL},
+	{APL2_APLD, NO_CTL, NO_CTL},
+
+	{MKK1_MKKA, NO_CTL, NO_CTL},
+	{MKK1_MKKB, NO_CTL, NO_CTL},
+	{MKK1_FCCA, NO_CTL, NO_CTL},
+	{MKK1_MKKA1, NO_CTL, NO_CTL},
+	{MKK1_MKKA2, NO_CTL, NO_CTL},
+	{MKK1_MKKC, NO_CTL, NO_CTL},
+
+	{MKK2_MKKA, NO_CTL, NO_CTL},
+	{MKK3_MKKA, NO_CTL, NO_CTL},
+	{MKK3_MKKB, NO_CTL, NO_CTL},
+	{MKK3_MKKA1, NO_CTL, NO_CTL},
+	{MKK3_MKKA2, NO_CTL, NO_CTL},
+	{MKK3_MKKC, NO_CTL, NO_CTL},
+	{MKK3_FCCA, NO_CTL, NO_CTL},
+
+	{MKK4_MKKA, NO_CTL, NO_CTL},
+	{MKK4_MKKB, NO_CTL, NO_CTL},
+	{MKK4_MKKA1, NO_CTL, NO_CTL},
+	{MKK4_MKKA2, NO_CTL, NO_CTL},
+	{MKK4_MKKC, NO_CTL, NO_CTL},
+	{MKK4_FCCA, NO_CTL, NO_CTL},
+
+	{MKK5_MKKB, NO_CTL, NO_CTL},
+	{MKK5_MKKA2, NO_CTL, NO_CTL},
+	{MKK5_MKKC, NO_CTL, NO_CTL},
+
+	{MKK6_MKKB, NO_CTL, NO_CTL},
+	{MKK6_MKKA1, NO_CTL, NO_CTL},
+	{MKK6_MKKA2, NO_CTL, NO_CTL},
+	{MKK6_MKKC, NO_CTL, NO_CTL},
+	{MKK6_FCCA, NO_CTL, NO_CTL},
+
+	{MKK7_MKKB, NO_CTL, NO_CTL},
+	{MKK7_MKKA1, NO_CTL, NO_CTL},
+	{MKK7_MKKA2, NO_CTL, NO_CTL},
+	{MKK7_MKKC, NO_CTL, NO_CTL},
+	{MKK7_FCCA, NO_CTL, NO_CTL},
+
+	{MKK8_MKKB, NO_CTL, NO_CTL},
+	{MKK8_MKKA2, NO_CTL, NO_CTL},
+	{MKK8_MKKC, NO_CTL, NO_CTL},
+
+	{MKK9_MKKA, NO_CTL, NO_CTL},
+	{MKK9_FCCA, NO_CTL, NO_CTL},
+	{MKK9_MKKA1, NO_CTL, NO_CTL},
+	{MKK9_MKKA2, NO_CTL, NO_CTL},
+	{MKK9_MKKC, NO_CTL, NO_CTL},
+
+	{MKK10_MKKA, NO_CTL, NO_CTL},
+	{MKK10_FCCA, NO_CTL, NO_CTL},
+	{MKK10_MKKA1, NO_CTL, NO_CTL},
+	{MKK10_MKKA2, NO_CTL, NO_CTL},
+	{MKK10_MKKC, NO_CTL, NO_CTL},
+
+	{MKK11_MKKA, NO_CTL, NO_CTL},
+	{MKK11_FCCA, NO_CTL, NO_CTL},
+	{MKK11_MKKA1, NO_CTL, NO_CTL},
+	{MKK11_MKKA2, NO_CTL, NO_CTL},
+	{MKK11_MKKC, NO_CTL, NO_CTL},
+
+	{MKK12_MKKA, NO_CTL, NO_CTL},
+	{MKK12_FCCA, NO_CTL, NO_CTL},
+	{MKK12_MKKA1, NO_CTL, NO_CTL},
+	{MKK12_MKKA2, NO_CTL, NO_CTL},
+	{MKK12_MKKC, NO_CTL, NO_CTL},
+
+	{MKK13_MKKB, NO_CTL, NO_CTL},
+	{MKK14_MKKA1, NO_CTL, NO_CTL},
+	{MKK15_MKKA1, NO_CTL, NO_CTL},
 
 	{WOR0_WORLD, NO_CTL, NO_CTL},
 	{WOR1_WORLD, NO_CTL, NO_CTL},
