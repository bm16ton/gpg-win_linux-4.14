QUINTESSENTIAL refactoring of known patches. A delta_dbm_relative_mod=0 means the stock values, which provide already a TX power ~31dBm. If max power is needed, set delta_dbm_relative_mod>0 ,otherwise to a value <0. The absolute value of cck_power should be <=14. When cck_power>=30, the device stops working because of the excessive overheat. If it's needed a long run at max power, the device should be coupled to a cooling system. Verified for devices equipped with transceiver rtl8225-zebra-2. For other transceivers, patching is also possible following similar logic.
STANDARD DISCLAIMER APPLIES.
--- backports-3.12.8-1-orig/drivers/net/wireless/rtl818x/rtl8187/dev.c	Sun Jan 19 19:13:38 2014
+++ backports-3.12.8-1/drivers/net/wireless/rtl818x/rtl8187/dev.c	Sun Jan 19 19:13:39 2014
@@ -252,8 +252,17 @@
 	flags |= RTL818X_TX_DESC_FLAG_NO_ENC;
 
 	flags |= ieee80211_get_tx_rate(dev, info)->hw_value << 24;
-	if (ieee80211_has_morefrags(tx_hdr->frame_control))
-		flags |= RTL818X_TX_DESC_FLAG_MOREFRAG;
+	
+	// When this flag is set the firmware waits untill ALL fragments have
+	// reached the USB device. Then it sends the first fragment and waits
+	// for ACKS's. Of course in monitor mode it won't detect these ACK's.
+	if (ieee80211_has_morefrags(tx_hdr->frame_control)) {
+		// If info->control.vif is NULL it's most likely in monitor mode
+		if (likely(info->control.vif != NULL && info->control.vif->type != NL80211_IFTYPE_MONITOR)) {
+			flags |= RTL818X_TX_DESC_FLAG_MOREFRAG;
+		}
+	}
+		
 	if (info->control.rates[0].flags & IEEE80211_TX_RC_USE_RTS_CTS) {
 		flags |= RTL818X_TX_DESC_FLAG_RTS;
 		flags |= ieee80211_get_rts_cts_rate(dev, info)->hw_value << 19;
@@ -277,7 +286,9 @@
 		hdr->flags = cpu_to_le32(flags);
 		hdr->len = 0;
 		hdr->rts_duration = rts_dur;
-		hdr->retry = cpu_to_le32((info->control.rates[0].count - 1) << 8);
+		if (!(info->flags & IEEE80211_TX_CTL_NO_ACK))
+			hdr->retry = cpu_to_le32((info->control.rates[0].count - 1) << 8);
+			else hdr->retry = 0;
 		buf = hdr;
 
 		ep = 2;
@@ -293,7 +304,9 @@
 		memset(hdr, 0, sizeof(*hdr));
 		hdr->flags = cpu_to_le32(flags);
 		hdr->rts_duration = rts_dur;
-		hdr->retry = cpu_to_le32((info->control.rates[0].count - 1) << 8);
+		if (!(info->flags & IEEE80211_TX_CTL_NO_ACK))
+			hdr->retry = cpu_to_le32((info->control.rates[0].count - 1) << 8);
+			else hdr->retry = 0;
 		hdr->tx_duration =
 			ieee80211_generic_frame_duration(dev, priv->vif,
 							 info->band,
--- backports-3.12.8-1-orig/drivers/net/wireless/rtl818x/rtl8187/rtl8225.c	Sun Jan 19 19:13:38 2014
+++ backports-3.12.8-1/drivers/net/wireless/rtl818x/rtl8187/rtl8225.c	Sun Jan 19 19:13:39 2014
@@ -537,9 +537,12 @@
 	const u8 *tmp;
 	u32 reg;
 	int i;
+	int delta_dbm_relative_mod=1;
 
 	cck_power = priv->channels[channel - 1].hw_value & 0xF;
 	ofdm_power = priv->channels[channel - 1].hw_value >> 4;
+	cck_power+=delta_dbm_relative_mod;
+	ofdm_power+=delta_dbm_relative_mod;
 
 	cck_power = min(cck_power, (u8)15);
 	cck_power += priv->txpwr_base & 0xF;
